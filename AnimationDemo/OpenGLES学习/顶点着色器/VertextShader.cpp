//
//  VertextShader.cpp
//  AnimationDemo
//
//  Created by lieon on 2021/1/20.
//  Copyright © 2021 lieon. All rights reserved.
//

#include "VertextShader.hpp"
/**
 # 顶点着色器
 - 如图展示OpenGL ES 3.0可编程管线，有阴影的方框表示OpenGL ES 3.0中的可编程阶段。
 - 顶点着色器可用于传统的基于顶点操作，例如通过矩阵变换位置，计算照明方程式以生成逐顶点的颜色以及生成或者变换纹理坐标
 ## 顶点着色器概述
 - 顶点着色器提供顶点操作的通用可编程方法。如下图展示了顶点着色器的输入和输出，顶点着色器的输入包括：
  - 属性---用顶点数组提供的煮顶点数据
  - 统一变量和统一变量缓冲区---顶点着色器使用的不变数据类型
  - 采样器---代表顶点着色亲使用的纹理的特殊统一变量类型
  - 着色器程序---顶点着色器程雪源代码货色描述在操作顶点的可执行文件
- 顶点着色器的输出称作顶点着色器输出变量。在图元光栅化阶段，为每个生成的片段计算这些变量，并作为片段着色器的输入传入
 
 ### 顶点着色器内建变量
 - 顶点着色器的内建变量可以分为特殊变量（顶点着色亲的输入输出），统一变量（如深度范围）以及规定最大值（如属性数量，顶点着色器输出变量数量和统一变量数量）的常量
 #### 内建特殊变量
 - 它们可以作为顶点着色器的输入或者在之后成为片段着色器输入的顶点着色器输出，或者片段着色器的输出。
    - ``gl_VertexID`` 是一个输入变量，用于保存顶点的整数索引。这个整数型变量用highp精度限定符声明
    - ``gl_IntanceID``是一个输入变量，用于保存实例化绘图调用中图元的实例编号。对于常规的绘图调用，该值为0.gl_InstaceID是一个整数型变量，用highp精度限定符号声明
    - ``gl_Position``用于输出顶点位置的裁剪坐标。该值在裁剪和视口阶段用于执行相应的图元裁剪以及裁剪坐标到屏幕坐标的顶点位置转换。如果顶点着色器we写入gl_Position。则gl_Position的值未定义。gl_Position是一个浮点变量，用highp精度限定符声明
    - ``gl_PointSize``用于写人以像素表示的点精灵尺寸，在渲染点精灵时使用。顶点着色器输出的gl_PointSize值被限定在OpenGL ES 3.0实现支持的非平滑点大小范围之内。gl_PointSize是一个浮点变量，用highp精度限定符声明
    - ``gl_FrontFacing``是一个特殊变量，但不是由顶点着色器直接写入的，而是根据顶点着色器生层的位置值和渲染的图元类型生成的。它是一个布尔变量
 #### 内建统一状态
 - 顶点着色器内可用的唯一内建统一状态是窗口坐标中的深度范围。这由内建统一变量名``gl_DepthRange``给出，该变量声明为 ``gl_DepthRangeParmeters``类型统一变量
    ```C++
    struct gl_DepthRangeParmeters {
        highp float near;
        highp float far;
        highp float diff;
    }
    uniform gl_DepthRangeParmeters gl_DepthRange;
    ```
 */
